#Использовать autumn
#Использовать asserts
#Использовать ".."
#Использовать "."
#Использовать "./Заготовки"

Перем Поделка;

Процедура ПередЗапускомТеста() Экспорт
	ПроинициализироватьПоделку();
КонецПроцедуры

Процедура ПроинициализироватьПоделку()
	Если Поделка = Неопределено Тогда	
		Поделка = ПолучитьПоделку();
	КонецЕсли;
КонецПроцедуры

Функция ПолучитьПоделку()

	Поделка = Новый Поделка();
	Поделка
		.ДобавитьЗаготовку(Тип("ИнициализаторТестов"))
		.ЗапуститьПриложение();

	Возврат Поделка;

КонецФункции

&Тест
Процедура СоздаетсяПростойКомпонент() Экспорт
	// Дано
	
	// Когда
	Компонент = Поделка.НайтиЖелудь("КомпонентНижнегоУровня");

	// Тогда
	Ожидаем.Что(Компонент).Не_().Равно(Неопределено);
КонецПроцедуры

&Тест
Процедура ОсуществляетсяВнедрениеКомпонента() Экспорт
	// Дано
	
	// Когда
	Компонент = Поделка.НайтиЖелудь("КомпонентВерхнегоУровня");

	// Тогда
	Ожидаем.Что(Компонент.ВнедряемыйКомпонентНижнегоУровня).Не_().Равно(Неопределено);
	Ожидаем.Что(Компонент.КомпонентНижнегоУровня).Не_().Равно(Неопределено);
	Ожидаем.Что(Компонент.ПолучитьКомпонентНижнегоУровня()).Не_().Равно(Неопределено);

КонецПроцедуры

&Тест
Процедура ВнедряетсяМассивФабричнымМетодом() Экспорт
	// Дано
	
	// Когда
	Компонент = Поделка.НайтиЖелудь("КомпонентСМассивом");

	// Тогда
	Ожидаем.Что(Компонент.МассивИзДвухЭлементов).ИмеетТип(Тип("Массив"));
	Ожидаем.Что(Компонент.МассивИзДвухЭлементов.Количество()).Равно(2);
КонецПроцедуры

&Тест
Процедура СоздаетсяКомпонентСКостомнымИменем() Экспорт
	// Дано
	
	// Когда
	Компонент = Поделка.НайтиЖелудь("КомпонентСКостомнымИменем");

	// Тогда
	Ожидаем.Что(Компонент).Не_().Равно(Неопределено);
КонецПроцедуры

&Тест
Процедура СоздаетсяОбычныйПрототип() Экспорт
	// Дано
	
	// Когда
	Компонент1 = Поделка.НайтиЖелудь("ОбычныйПрототип");
	Компонент2 = Поделка.НайтиЖелудь("ОбычныйПрототип");

	// Тогда
	Ожидаем.Что(Компонент1).Не_().Равно(Неопределено);
	Ожидаем.Что(Компонент2).Не_().Равно(Неопределено);
	Ожидаем.Что(Компонент1).Не_().Равно(Компонент2);
КонецПроцедуры

&Тест
Процедура СоздаетсяПрототипСКостомнымИмененм() Экспорт
	// Дано
	
	// Когда
	Компонент1 = Поделка.НайтиЖелудь("ПрототипСКостомнымИмененм");
	Компонент2 = Поделка.НайтиЖелудь("ПрототипСКостомнымИмененм");

	// Тогда
	Ожидаем.Что(Компонент1).Не_().Равно(Неопределено);
	Ожидаем.Что(Компонент2).Не_().Равно(Неопределено);
	Ожидаем.Что(Компонент1).Не_().Равно(Компонент2);
КонецПроцедуры

&Тест
Процедура СоздаетсяКомпонентПоСинониму() Экспорт
	// Дано
	
	// Когда
	Компонент = Поделка.НайтиЖелудь("УникальныйКомпонент");

	// Тогда
	Ожидаем.Что(Компонент).Не_().Равно(Неопределено);
КонецПроцедуры

&Тест
Процедура СоздаетсяКомпонентДляНапильника() Экспорт
	// Дано
	
	// Когда
	Компонент = Поделка.НайтиЖелудь("КомпонентДляНапильника");

	// Тогда
	Ожидаем.Что(Компонент).Не_().Равно(Неопределено);
	Ожидаем.Что(Компонент.Значение).Равно(1);
КонецПроцедуры

&Тест
Процедура СоздаетсяКонкурентныйКомпонент() Экспорт
	// Дано
	
	// Когда
	Компонент = Поделка.НайтиЖелудь("КонкуретныйКомпонент");

	// Тогда
	Ожидаем.Что(Компонент).Не_().Равно(Неопределено);
	Ожидаем.Что(Компонент).ИмеетТип(Тип("ЕщеКонкуретныйКомпонент"));
КонецПроцедуры

&Тест
Процедура ЗапускательОбрабатываетКомпонент() Экспорт
	// Дано
	
	// Когда
	Компонент = Поделка.НайтиЖелудь("КомпонентДляЗапускателя");

	// Тогда
	Ожидаем.Что(Компонент).Не_().Равно(Неопределено);
	Ожидаем.Что(Компонент.Обработан).Равно(Истина);
КонецПроцедуры

&Тест
Процедура ОсуществляетсяВнедрениеКомпонентаЧерезКостомнуюАннотацию() Экспорт
	// Дано
	
	// Когда
	Компонент = Поделка.НайтиЖелудь("КомпонентПроверкиВнедрения");

	// Тогда
	Ожидаем.Что(Компонент.ВнедряемыйКомпонентНижнегоУровня).Не_().Равно(Неопределено);
	Ожидаем.Что(Компонент.КомпонентНижнегоУровня).Не_().Равно(Неопределено);
	Ожидаем.Что(Компонент.ПолучитьКомпонентНижнегоУровня()).Не_().Равно(Неопределено);
	Ожидаем.Что(Компонент.КомпонентВКонструкторе).Не_().Равно(Неопределено);

КонецПроцедуры

&Тест
Процедура КомпонентНаполняетсяЗначениямиНастроек() Экспорт
	// Дано

	// Когда
	Компонент = Поделка.НайтиЖелудь("КомпонентСНастройками");
	
	// Тогда
	Ожидаем.Что(Компонент.ПростаяНастройка, "Простая настройка не прочиталась").Равно("Значение простой настройки");
	Ожидаем.Что(Компонент.ХитраяНастройка, "Хитрая настройка не прочиталась").Равно("Значение очень хитрой настройки");
	Ожидаем.Что(Компонент.ЧисловаяНастройка, "В настройку не подставилось значение по умолчанию").Равно(123);
	Ожидаем.Что(Компонент.ЧисловаяНастройка(), "Конструктор не принял настройку").Равно(123);
	Ожидаем.Что(Компонент.МассивНастроек, "Массив внедрился корректно").ИмеетТип("Массив");
	Ожидаем.Что(Компонент.МассивНастроек.Количество(), "Массив настроек содержит 3 элемента").Равно(3);
	Ожидаем.Что(Компонент.МассивНастроек[0], "Массив настроек содержит корректное значение 0 элемента").Равно(1);
	Ожидаем.Что(Компонент.МассивНастроек[1], "Массив настроек содержит корректное значение 1 элемента").Равно(2);
	Ожидаем.Что(Компонент.МассивНастроек[2], "Массив настроек содержит корректное значение 2 элемента").Равно(3);

КонецПроцедуры

&Тест
Процедура ЖелудьПолучаетБлестяшкуВКонструктор() Экспорт
	// Дано
	ЗначениеПараметра = 1;
	МассивПараметров = Новый Массив();
	МассивПараметров.Добавить(ЗначениеПараметра);

	// Когда-Тогда
	Компонент = Поделка.НайтиЖелудь("КомпонентСПроизвольнымиПараметрами", МассивПараметров);

	// Тогда
	Ожидаем.Что(ЗначениеПараметра).Равно(Компонент.ПолучитьНеЭкспортныйПараметр());
	
КонецПроцедуры

&Тест
Процедура ПостОбработкаКомпонента() Экспорт
	// Дано
	
	// Когда
	Компонент = Поделка.НайтиЖелудь("КомпонентСПостОбработкой");

	// Тогда
	Ожидаем.Что(Компонент.МассивИзДвухЭлементов).ИмеетТип(Тип("Массив"));
	Ожидаем.Что(Компонент.МассивИзДвухЭлементов.Количество()).Равно(3);
	Ожидаем.Что(Компонент.МассивИзДвухЭлементов[2]).Равно(100);

КонецПроцедуры

&Тест
Процедура ПолучениеКомпонентаИзКонтейнера() Экспорт
	// Дано
	
	// Когда
	Компонент = Поделка.НайтиЖелудь("КомпонетСКонтейнером");
	ПервыйКомпонент = Компонент.КонтейнерКомпонент.Достать();
	ВторойКомпонент = Компонент.КонтейнерКомпонент.Достать();

	// Тогда
	Ожидаем.Что(ПервыйКомпонент).ИмеетТип(Тип("ОбычныйПрототип"));
	Ожидаем.Что(ВторойКомпонент).ИмеетТип(Тип("ОбычныйПрототип"));
	Ожидаем.Что(ПервыйКомпонент).Не_().Равно(ВторойКомпонент);
	
КонецПроцедуры